{"ast":null,"code":"var _jsxFileName = \"Z:\\\\React\\\\Projects\\\\01-starting-setup\\\\src\\\\components\\\\Expenses\\\\Expenses.js\",\n    _s = $RefreshSig$();\n\nimport ExpenseItem from \"./ExpenseItem\";\nimport \"./Expenses.css\";\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Expenses = props => {\n  _s();\n\n  const [year, setYear] = useState(\"2021\");\n  let filteredExpenses = props.data.filter(e => e.date.getFullYear().toString() === year); //filterChangeHandler\n\n  const filterChangeHandler = changedYear => {\n    setYear(changedYear);\n  };\n\n  let expenseContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \" No Expenses Found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 24\n  }, this);\n\n  if (filteredExpenses.length > 0) {\n    expenseContent = filteredExpenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      date: expense.date,\n      title: expense.title,\n      amount: expense.amount\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expenses\",\n    children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n      onFilterChange: filterChangeHandler,\n      selectedYear: year\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), expenseContent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Expenses, \"pSo10eDO173CtQ5cP0ICEPE8uxg=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["Z:/React/Projects/01-starting-setup/src/components/Expenses/Expenses.js"],"names":["ExpenseItem","Card","ExpensesFilter","React","useState","Expenses","props","year","setYear","filteredExpenses","data","filter","e","date","getFullYear","toString","filterChangeHandler","changedYear","expenseContent","length","map","expense","title","amount","id"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,OAAO,gBAAP;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AACA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,MAAD,CAAhC;AACA,MAAIK,gBAAgB,GAAGH,KAAK,CAACI,IAAN,CAAWC,MAAX,CACpBC,CAAD,IAAOA,CAAC,CAACC,IAAF,CAAOC,WAAP,GAAqBC,QAArB,OAAoCR,IADtB,CAAvB,CAF0B,CAK1B;;AACA,QAAMS,mBAAmB,GAAIC,WAAD,IAAiB;AAC3CT,IAAAA,OAAO,CAACS,WAAD,CAAP;AACD,GAFD;;AAGA,MAAIC,cAAc,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAArB;;AAEA,MAAIT,gBAAgB,CAACU,MAAjB,GAA0B,CAA9B,EAAiC;AAC/BD,IAAAA,cAAc,GAAGT,gBAAgB,CAACW,GAAjB,CAAsBC,OAAD,iBACpC,QAAC,WAAD;AAEE,MAAA,IAAI,EAAEA,OAAO,CAACR,IAFhB;AAGE,MAAA,KAAK,EAAEQ,OAAO,CAACC,KAHjB;AAIE,MAAA,MAAM,EAAED,OAAO,CAACE;AAJlB,OACOF,OAAO,CAACG,EADf;AAAA;AAAA;AAAA;AAAA,YADe,CAAjB;AAQD;;AACD,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA,4BACE,QAAC,cAAD;AACE,MAAA,cAAc,EAAER,mBADlB;AAEE,MAAA,YAAY,EAAET;AAFhB;AAAA;AAAA;AAAA;AAAA,YADF,EAKGW,cALH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CA9BD;;GAAMb,Q;;KAAAA,Q;AA+BN,eAAeA,QAAf","sourcesContent":["import ExpenseItem from \"./ExpenseItem\";\r\nimport \"./Expenses.css\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport React, { useState } from \"react\";\r\nconst Expenses = (props) => {\r\n  const [year, setYear] = useState(\"2021\");\r\n  let filteredExpenses = props.data.filter(\r\n    (e) => e.date.getFullYear().toString() === year\r\n  );\r\n  //filterChangeHandler\r\n  const filterChangeHandler = (changedYear) => {\r\n    setYear(changedYear);\r\n  };\r\n  let expenseContent = <p> No Expenses Found</p>;\r\n\r\n  if (filteredExpenses.length > 0) {\r\n    expenseContent = filteredExpenses.map((expense) => (\r\n      <ExpenseItem\r\n        key={expense.id}\r\n        date={expense.date}\r\n        title={expense.title}\r\n        amount={expense.amount}\r\n      />\r\n    ));\r\n  }\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpensesFilter\r\n        onFilterChange={filterChangeHandler}\r\n        selectedYear={year}\r\n      />\r\n      {expenseContent}\r\n    </Card>\r\n  );\r\n};\r\nexport default Expenses;\r\n"]},"metadata":{},"sourceType":"module"}